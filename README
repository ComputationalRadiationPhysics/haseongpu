=======================================
#         OCTRACE                     #
=======================================
#                                     #
# Author : Erik Zenker                #
#          Carlchristian Eckert       #
#          Marius Melzer              #
#                                     #
# Licence: GPLv3                      #
#                                     #
=======================================

## Descrition ##


## Dependencies ##

   Software:
   + make
   + gcc 4.4.1
   + cuda 5.0
   
   Hardware:
   + Nvidia device >= Compute capability 2.0

## Installation ##

   run : make

## Usage ##

   Usually you run this programm by a matlab script, that does
   the whole magic stuff for you. But you can also run it by hand,
   see synopsis for details.

## Matlab interface ##

   * add run_octrace.m to your matlab path
   * call run_octrace from your matlab script

   run_octrace(
	points,
	triangleNormalsX,
	triangleNormalsY,
	forbiddenEdge,
	triangleNormalPoint,
	triangleNeighbors, 
	trianglePointIndices,
	thickness,
	numberOfLevels,
	nTot,
	betaVol,
	laserWavelength,
	crystal,
	prismBetaValues,
	triangleSurfaces,
	triangleCenterX,
	triangleCenterY,
	clad,
	cladNum,
	cladAbs,
	refractiveIndices,
	reflectivities,
	maxRays,
	MSEThreshold,
	useReflections
	)

## Synopsis ##

   Command:
     ./octrace [OPTIONS] 

   Options:
    --experiment=
      The absolut path to the experiment location.
      This folder contains several .txt files usually
      generated by an matlab script. The content of this
      .txt files contains all experiment data you need
      to run one experiment.

    --mode=[for_loops|ray_propagation_gpu]
      Defines the runmode/algorithm to start the
      simulation with. Mode "for_loops" is the original
      algorithm based on single core cpu. Mode "ray_propagation_gpu"
      is the parallel algorithm based on nvidia cuda
      devices.

    --expecatation=
      Sets the maximal MSE of the ASE value. If a sample-point
      does not reach this MSE-threshold, the number of rays
      per sample-point will be increased upto maxrays.

    --rays=
      Sets the minimum number of rays per sample-point in the
      crystal structure.

    --maxrays=
      Sets the maximal number of rays per sample-point. The number
      of rays per sample-point will vary between minimum and
      maximum number of rays in dependance of a MSE-Threshold.
      (see --expecatation=)

    --silent
      Don't print so much debug information.

    --compare=
      Is the location of a .vtk file with that you want to compare
      your solution. It is good to recognize stastical differences
      between different rays counts.

    --write-vtk
      Write the ASE-Flux of the calculation to a .vtk file

           